# Generated by Django 3.0.6 on 2020-05-08 01:38

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import utils.validators
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('shoptask', '0005_goodsassigned_is_skip'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExtraCharge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True, null=True)),
                ('label', models.CharField(max_length=255)),
                ('identifier', models.CharField(help_text='Unique code.', max_length=255)),
                ('description', models.TextField(blank=True)),
                ('limit', models.IntegerField()),
                ('metric', models.CharField(choices=[('kg', 'Kilogram'), ('hg', 'Ons'), ('g', 'Gram'), ('mg', 'Miligram'), ('pack', 'Bungkus'), ('piece', 'Buah'), ('bunch', 'Ikat'), ('sack', 'Karung / Sak'), ('unit', 'Unit'), ('km', 'Kilometer'), ('m', 'Meter'), ('cm', 'Sentimeter'), ('mm', 'Milimeter'), ('kg', 'Kilogram'), ('hg', 'Ons'), ('g', 'Gram'), ('mg', 'Miligram')], max_length=255, validators=[django.core.validators.RegexValidator(message='Can only contain the letters a-z and underscores.', regex='^[a-zA-Z_][a-zA-Z_]*$'), utils.validators.non_python_keyword])),
                ('charge', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Extra Charge',
                'verbose_name_plural': 'Extra Charges',
                'db_table': 'shoptask_extra_charge',
                'ordering': ['-date_created'],
                'abstract': False,
            },
        ),
        migrations.RenameField(
            model_name='goods',
            old_name='amount',
            new_name='quantity',
        ),
        migrations.AddField(
            model_name='catalog',
            name='size_height',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='catalog',
            name='size_height_metric',
            field=models.CharField(blank=True, choices=[('km', 'Kilometer'), ('m', 'Meter'), ('cm', 'Sentimeter'), ('mm', 'Milimeter')], max_length=255, null=True, validators=[django.core.validators.RegexValidator(message='Can only contain the letters a-z and underscores.', regex='^[a-zA-Z_][a-zA-Z_]*$'), utils.validators.non_python_keyword]),
        ),
        migrations.AddField(
            model_name='catalog',
            name='size_length',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='catalog',
            name='size_length_metric',
            field=models.CharField(blank=True, choices=[('km', 'Kilometer'), ('m', 'Meter'), ('cm', 'Sentimeter'), ('mm', 'Milimeter')], max_length=255, null=True, validators=[django.core.validators.RegexValidator(message='Can only contain the letters a-z and underscores.', regex='^[a-zA-Z_][a-zA-Z_]*$'), utils.validators.non_python_keyword]),
        ),
        migrations.AddField(
            model_name='catalog',
            name='size_weight',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='catalog',
            name='size_weight_metric',
            field=models.CharField(blank=True, choices=[('kg', 'Kilogram'), ('hg', 'Ons'), ('g', 'Gram'), ('mg', 'Miligram')], max_length=255, null=True, validators=[django.core.validators.RegexValidator(message='Can only contain the letters a-z and underscores.', regex='^[a-zA-Z_][a-zA-Z_]*$'), utils.validators.non_python_keyword]),
        ),
        migrations.AddField(
            model_name='catalog',
            name='size_width',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='catalog',
            name='size_width_metric',
            field=models.CharField(blank=True, choices=[('km', 'Kilometer'), ('m', 'Meter'), ('cm', 'Sentimeter'), ('mm', 'Milimeter')], max_length=255, null=True, validators=[django.core.validators.RegexValidator(message='Can only contain the letters a-z and underscores.', regex='^[a-zA-Z_][a-zA-Z_]*$'), utils.validators.non_python_keyword]),
        ),
        migrations.AlterField(
            model_name='goods',
            name='metric',
            field=models.CharField(choices=[('kg', 'Kilogram'), ('hg', 'Ons'), ('g', 'Gram'), ('mg', 'Miligram'), ('pack', 'Bungkus'), ('piece', 'Buah'), ('bunch', 'Ikat'), ('sack', 'Karung / Sak'), ('unit', 'Unit')], max_length=255, validators=[django.core.validators.RegexValidator(message='Can only contain the letters a-z and underscores.', regex='^[a-zA-Z_][a-zA-Z_]*$'), utils.validators.non_python_keyword]),
        ),
        migrations.AlterField(
            model_name='purchase',
            name='status',
            field=models.CharField(choices=[('submitted', 'Submitted'), ('reviewed', 'Reviewed'), ('accept', 'Accept'), ('assigned', 'Assigned'), ('processed', 'Processed'), ('rejected', 'Rejected'), ('done', 'Done')], default='submitted', max_length=255, validators=[django.core.validators.RegexValidator(message='Can only contain the letters a-z and underscores.', regex='^[a-zA-Z_][a-zA-Z_]*$'), utils.validators.non_python_keyword]),
        ),
        migrations.CreateModel(
            name='PurchaseStatusChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True, null=True)),
                ('old_status', models.CharField(choices=[('submitted', 'Submitted'), ('reviewed', 'Reviewed'), ('accept', 'Accept'), ('assigned', 'Assigned'), ('processed', 'Processed'), ('rejected', 'Rejected'), ('done', 'Done')], max_length=255, validators=[django.core.validators.RegexValidator(message='Can only contain the letters a-z and underscores.', regex='^[a-zA-Z_][a-zA-Z_]*$'), utils.validators.non_python_keyword])),
                ('new_status', models.CharField(choices=[('submitted', 'Submitted'), ('reviewed', 'Reviewed'), ('accept', 'Accept'), ('assigned', 'Assigned'), ('processed', 'Processed'), ('rejected', 'Rejected'), ('done', 'Done')], max_length=255, validators=[django.core.validators.RegexValidator(message='Can only contain the letters a-z and underscores.', regex='^[a-zA-Z_][a-zA-Z_]*$'), utils.validators.non_python_keyword])),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchase_status_changes', related_query_name='purchase_status_change', to=settings.AUTH_USER_MODEL)),
                ('purchase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_status_changes', related_query_name='purchase_status_change', to='shoptask.Purchase')),
            ],
            options={
                'verbose_name': 'Purchase Status Change',
                'verbose_name_plural': 'Purchase Status Changes',
                'db_table': 'shoptask_purchase_status_change',
                'ordering': ['-date_created'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GoodsExtraCharge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True, null=True)),
                ('amount', models.IntegerField()),
                ('metric', models.CharField(help_text='egg: Kilogram, Weight, etc', max_length=255)),
                ('charge', models.BigIntegerField(help_text='Total extra charge.')),
                ('extra_charge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goods_extra_charges', related_query_name='goods_extra_charge', to='shoptask.ExtraCharge')),
                ('goods', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goods_extra_charges', related_query_name='goods_extra_charge', to='shoptask.Goods')),
            ],
            options={
                'verbose_name': 'Goods Extra Charge',
                'verbose_name_plural': 'Goods Extra Charges',
                'db_table': 'shoptask_goods_extra_charge',
                'abstract': False,
            },
        ),
    ]
